// src/pages/Node/index.jsx
import './styles.css';
import { useState } from 'react'; 'react';

export default function NodePage() {
  const [expandedElement, setExpandedElement] = useState(null);

  const elements = [
    { element: "NPM", description: "O Node Package Manager √© usado para gerenciar pacotes e depend√™ncias em aplica√ß√µes Node.js." },
    { element: "Express", description: "Um framework web minimalista para Node.js, que facilita a cria√ß√£o de servidores e APIs." },
    { element: "Middleware", description: "Fun√ß√µes que t√™m acesso ao objeto de solicita√ß√£o e resposta, permitindo manipular requisi√ß√µes e respostas." },
    { element: "Asynchronous Programming", description: "Node.js √© projetado para opera√ß√µes ass√≠ncronas, utilizando callbacks, Promises e async/await." },
    { element: "RESTful APIs", description: "Node.js √© amplamente usado para construir APIs RESTful, permitindo que diferentes aplica√ß√µes se comuniquem." },
    { element: "Curiosidades ", description: "1. Baseado em caf√©: O logo oficial do Node.js tem um design que lembra gr√£os de caf√©. Isso porque seu criador, Ryan Dahl, √© f√£ de caf√©, assim como muitos programadores. 2. Primeira aplica√ß√£o de Node.js: Uma das primeiras coisas feitas com Node.js foi um servidor que simplesmente respondia 'Hello World' para qualquer requisi√ß√£o. Isso virou o exemplo mais famoso para iniciantes. 3. Node.js tornou o JavaScript um super-her√≥i!Antes do Node.js, o JavaScript era basicamente usado apenas para desenvolvimento front-end no navegador. Com ele, o JavaScript foi para o servidor, fazendo com que desenvolvedores pudessem usar a mesma linguagem no backend, o que muitos chamaram de 'superpoderes'." },
  ];

  const handleExpand = (element) => {
    setExpandedElement(element === expandedElement ? null : element);
  };

  return (
    <div className="node-container">
      <h1>Introdu√ß√£o ao Node.js üöÄ</h1>
      <p className="description">
        Node.js √© um ambiente de execu√ß√£o JavaScript no lado do servidor. Permite criar aplica√ß√µes de rede escal√°veis e eficientes.
      </p>

      <h2>Elementos Importantes do Node.js</h2>
      <p>Clique em cada elemento para expandir e aprender mais:</p>

      <div className="elements-container">
        {elements.map((item, index) => (
          <div 
            key={index} 
            className={`element ${expandedElement === item.element ? 'expanded' : ''}`}
            onClick={() => handleExpand(item.element)}
          >
            <span className="element-tag">{item.element}</span>
            {expandedElement === item.element && (
              <p className="element-description">{item.description}</p>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}